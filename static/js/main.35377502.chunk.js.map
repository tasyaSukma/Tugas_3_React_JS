{"version":3,"sources":["Event/TopEvents.js","Page/Footer.js","Page/Header.js","Page/MenuKontak.js","ListData/ListMakanan.js","Page/MenuMakanan.js","Page/MenuTentangKami.js","App.js","serviceWorker.js","index.js"],"names":["TopEvents","href","onClick","e","value","preventDefault","alert","handleFooter","Footer","Component","Header","MenuKontak","ListMakanan","props","state","datalist","dataUrl","src","this","alt","width","MenuMakanan","pesan","rubahPesanan","bind","pesanan","temp","setState","console","log","target","type","onChange","MenuTentangKami","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oPAaeA,EAXG,WAMjB,OACC,uBAAGC,KAAK,IAAIC,QAAY,SAAAC,GAAC,OANL,SAACC,EAAMD,GAC3BA,EAAEE,iBACFC,MAAMF,GAIuBG,CAAa,eAAgBJ,KAA1D,iBCKaK,E,uKATb,OACC,6BACC,kBAAC,EAAD,MACA,qD,GALiBC,aCWNC,E,uKAVb,OACC,6BACC,gCACA,4E,GALiBD,aCWNE,MAXf,WACC,OACC,6BACC,gCACC,6HACA,6D,OCYWC,E,kDAhBd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACZC,SAAW,EAAKF,MAAMG,SAHN,E,qDAQjB,OACC,6BACC,yBAAKC,IAAKC,KAAKJ,MAAMC,SAAUI,IAAI,kBAAkBC,MAAM,a,GAXrCX,aCgEXY,E,kDA9Dd,WAAYR,GAAO,IAAD,8BACjB,cAAOA,IACFC,MAAQ,CACZQ,MAAQ,GAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBANE,E,yDASJrB,GACbA,EAAEE,iBACF,IAAIqB,EAAOR,KAAKJ,MAAMQ,MAAQ,EAC9BJ,KAAKS,UAAS,SAACb,EAAMD,GAAP,MAAkB,CAC/BS,MAAQI,Q,8BAIFvB,GACPA,EAAEE,iBACFuB,QAAQC,IAAI1B,EAAE2B,OAAO1B,S,+BAGb,IAAD,OACP,OACC,6BACC,oEACA,+BACC,+BACC,4BACC,4BACC,kBAAC,EAAD,CAAaY,QAAU,6EACvB,gCACC,4BAAQd,QAAS,SAACC,GAAD,OAAO,EAAKoB,aAAapB,KAA1C,oBAGF,4BACC,kBAAC,EAAD,CAAaa,QAAU,uEACvB,4BAAQd,QAAW,SAACC,GAAD,OAAO,EAAKoB,aAAapB,KAA5C,mBAED,4BACC,kBAAC,EAAD,CAAaa,QAAU,+EACvB,4BAAQd,QAAW,SAACC,GAAD,OAAO,EAAKoB,aAAapB,KAA5C,mBAED,4BACC,kBAAC,EAAD,CAAaa,QAAU,4GACvB,4BAAQd,QAAW,SAACC,GAAD,OAAO,EAAKoB,aAAapB,KAA5C,mBAED,4BACC,kBAAC,EAAD,CAAaa,QAAU,6FACvB,4BAAQd,QAAW,SAACC,GAAD,OAAO,EAAKoB,aAAapB,KAA5C,sBAKJ,6BACA,2BAAO4B,KAAK,OAAOC,SAAU,SAAC7B,GAAD,OAAO,EAAKsB,QAAQtB,MACjD,8CAAoBe,KAAKJ,MAAMQ,Y,GAzDTb,aCUXwB,MAXf,WACC,OACC,6BACC,gCACC,2CACA,sKCaWC,MAZf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxB,QAAQwB,MAAMA,EAAMC,a","file":"static/js/main.35377502.chunk.js","sourcesContent":["import React from 'react';\n\nconst TopEvents = () => {\n\tconst handleFooter = (value,e) => {\n\t\te.preventDefault();\n\t\talert(value);\n\t};\n\n\treturn (\n\t\t<a href=\"/\" onClick = { e => handleFooter(\"Back To Home\", e)}>Back To Home</a>\n\t);\n}\n\nexport default TopEvents;","import React, {Component} from 'react';\nimport TopEvents from './../Event/TopEvents';\n\nclass Footer extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<TopEvents/>\n\t\t\t\t<h3>Tugas 3 React JS</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\n\nclass Header extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t<h3>Home | Product | Kontak | Tentang Kami</h3>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Header;","import React from 'react';\n\nfunction MenuKontak(){\n\treturn(\n\t\t<div>\n\t\t\t<center>\n\t\t\t\t<h4> Jl Swadaya IV, Pd.Ranggon, Cipayung, Kota Jakarta Timur, Daerah Khusus Ibukota Jakarta 13860</h4>\n\t\t\t\t<h5>Kontak Kami : 081312345678</h5>\n\t\t\t</center>\n\t\t</div>\n\t);\n}\n\nexport default MenuKontak;","import React, {Component} from 'react';\n\nclass ListMakanan extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdatalist : this.props.dataUrl\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<img src={this.state.datalist} alt=\"Product Makanan\" width=\"150\"/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ListMakanan;","import React, {Component} from 'react';\nimport ListMakanan from './../ListData/ListMakanan';\n\nclass MenuMakanan extends Component {\n\tconstructor(props){\n\t\tsuper (props)\n\t\tthis.state = {\n\t\t\tpesan : 0,\n\t\t}\n\t\tthis.rubahPesanan = this.rubahPesanan.bind(this)\n\t\tthis.pesanan = this.pesanan.bind(this)\n\t}\n\n\trubahPesanan (e){\n\t\te.preventDefault();\n\t\tvar temp = this.state.pesan + 1;\n\t\tthis.setState((state,props) => ({\n\t\t\tpesan : temp\n\t\t}));\n\t}\n\n\tpesanan(e){\n\t\te.preventDefault()\n\t\tconsole.log(e.target.value)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h3>Daftar Makanan Yang Kami Sediakan : </h3>\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ListMakanan dataUrl = \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"/>\n\t\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t\t<button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\n\t\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ListMakanan dataUrl = \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"/>\n\t\t\t\t\t\t\t\t<button onClick = {(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ListMakanan dataUrl = \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"/>\n\t\t\t\t\t\t\t\t<button onClick = {(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ListMakanan dataUrl = \"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"/>\n\t\t\t\t\t\t\t\t<button onClick = {(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ListMakanan dataUrl = \"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"/>\n\t\t\t\t\t\t\t\t<button onClick = {(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<br/>\n\t\t\t\t<input type=\"text\" onChange={(e) => this.pesanan(e)}/>\n\t\t\t\t<h3>Pesanan Anda : {this.state.pesan}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MenuMakanan;\n","import React from 'react';\n\nfunction MenuTentangKami (){\n\treturn(\n\t\t<div>\n\t\t\t<center>\n\t\t\t\t<p>Tentang Kami</p>\n\t\t\t\t<p>Warung Nusantara Adalah Restoran Yang Bernuansa Makanan Nusantara, Kami Ada Untuk Membuat Anda Menikmati Makanan Khas Dari Nusantara</p>\n\t\t\t</center>\n\t\t</div>\n\t);\n}\n\nexport default MenuTentangKami;","import React from 'react';\nimport './App.css';\nimport Footer from './Page/Footer';\nimport Header from './Page/Header';\nimport MenuKontak from './Page/MenuKontak';\nimport MenuMakanan from './Page/MenuMakanan';\nimport MenuTentangKami from './Page/MenuTentangKami';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <MenuMakanan/>\n      <MenuTentangKami/>\n      <MenuKontak/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}